<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.festivalBooking.post.dao.PostDAO">
	<select id="selectPostListByUserIdPostType" parameterType="map" resultType="map">
 		SELECT *
 		FROM `post`
 		WHERE `userId` = #{userId}
 		AND `postType` = #{postType}
 		order by `id` DESC
 	</select>

	<select id="selectPostListByPostType" parameterType="String" resultType="map">
 		SELECT *
 		FROM `post`
 		WHERE `postType`=#{postType}
 		order by `id` DESC
 	</select>
	
	<select id="selectPostListByPostTypeFromLimit" parameterType="map" resultType="map">
 		SELECT *
 		FROM `post`
 		WHERE `postType`=#{postType}
 		order by `id` DESC
 		LIMIT ${from},${limit}
 	</select>

	<select id="selectPostCountByPostType" parameterType="String" resultType="int">
 		SELECT COUNT(*)
 		FROM `post`
 		WHERE `postType`=#{postType}
 	</select>
 	
 	<select id="selectPostByPostId" parameterType="int" resultType="com.festivalBooking.post.model.Post">
 		SELECT *
 		FROM `post`
 		WHERE `id`=#{postId}
 	</select>
 	
 	<insert id="insertPost" parameterType="com.festivalBooking.post.model.Post"
 	useGeneratedKeys="true" keyProperty="id">
 		INSERT INTO `post`
 		(
 			`userId`
			,`postType`
			,`postTitle`
			,`content`
			,`createdAt`
			,`updatedAt`
 		)
 		VALUES
 		(
			#{userId}
			,#{postType}
			,#{postTitle}
			,#{content}
			,Now()
			,Now()
 		)
 	</insert>
 	
 	<update id="updatePost" parameterType="map">
 		UPDATE `post`
		SET
			`postTitle` = #{postUpdatedTitle}
			,`content` = #{updatedContent}
			,`updatedAt` = NOW()
			
		WHERE
			`id` = #{postId}
 	</update>
 	
 	<delete id="deletePostByPostIdUserId" parameterType="map">
 		DELETE
		FROM
			`post`
		WHERE
			`id` = #{postId}
		AND `userId` = #{postUserId}
 	</delete>
</mapper>